/* 动画关键帧定义 */
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeInDown {
    from {
        opacity: 0;
        transform: translateY(-30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeInLeft {
    from {
        opacity: 0;
        transform: translateX(-30px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes fadeInRight {
    from {
        opacity: 0;
        transform: translateX(30px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes slideInUp {
    from {
        opacity: 0;
        transform: translateY(100px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes bounce {
    0%, 20%, 53%, 80%, 100% {
        transform: translate3d(0, 0, 0);
    }
    40%, 43% {
        transform: translate3d(0, -8px, 0);
    }
    70% {
        transform: translate3d(0, -4px, 0);
    }
    90% {
        transform: translate3d(0, -2px, 0);
    }
}

@keyframes pulse {
    0% {
        transform: scale(1);
        opacity: 1;
    }
    50% {
        transform: scale(1.05);
        opacity: 0.8;
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

@keyframes glow {
    0%, 100% {
        box-shadow: 0 0 20px rgba(99, 102, 241, 0.3);
    }
    50% {
        box-shadow: 0 0 40px rgba(99, 102, 241, 0.6);
    }
}

@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

@keyframes float {
    0%, 100% {
        transform: translateY(0px);
    }
    50% {
        transform: translateY(-20px);
    }
}

@keyframes morphing {
    0% {
        border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
    }
    50% {
        border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
    }
    100% {
        border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
    }
}

@keyframes gradient-shift {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

@keyframes typing {
    from {
        width: 0;
    }
    to {
        width: 100%;
    }
}

@keyframes blink {
    50% {
        border-color: transparent;
    }
}

@keyframes matrix {
    0% {
        transform: translateY(-100vh);
        opacity: 0;
    }
    50% {
        opacity: 1;
    }
    100% {
        transform: translateY(100vh);
        opacity: 0;
    }
}

@keyframes ripple {
    0% {
        transform: scale(0);
        opacity: 0.8;
    }
    100% {
        transform: scale(4);
        opacity: 0;
    }
}

@keyframes shimmer {
    0% {
        background-position: -200% center;
    }
    100% {
        background-position: 200% center;
    }
}

@keyframes slide-in-right {
    from {
        transform: translateX(100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes slide-in-left {
    from {
        transform: translateX(-100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes zoom-in {
    from {
        transform: scale(0.8);
        opacity: 0;
    }
    to {
        transform: scale(1);
        opacity: 1;
    }
}

@keyframes zoom-out {
    from {
        transform: scale(1.2);
        opacity: 0;
    }
    to {
        transform: scale(1);
        opacity: 1;
    }
}

@keyframes flip-in-x {
    from {
        transform: perspective(400px) rotateX(90deg);
        opacity: 0;
    }
    40% {
        transform: perspective(400px) rotateX(-20deg);
    }
    60% {
        transform: perspective(400px) rotateX(10deg);
    }
    80% {
        transform: perspective(400px) rotateX(-5deg);
    }
    to {
        transform: perspective(400px) rotateX(0deg);
        opacity: 1;
    }
}

@keyframes flip-in-y {
    from {
        transform: perspective(400px) rotateY(90deg);
        opacity: 0;
    }
    40% {
        transform: perspective(400px) rotateY(-20deg);
    }
    60% {
        transform: perspective(400px) rotateY(10deg);
    }
    80% {
        transform: perspective(400px) rotateY(-5deg);
    }
    to {
        transform: perspective(400px) rotateY(0deg);
        opacity: 1;
    }
}

@keyframes rubber-band {
    from {
        transform: scale3d(1, 1, 1);
    }
    30% {
        transform: scale3d(1.25, 0.75, 1);
    }
    40% {
        transform: scale3d(0.75, 1.25, 1);
    }
    50% {
        transform: scale3d(1.15, 0.85, 1);
    }
    65% {
        transform: scale3d(0.95, 1.05, 1);
    }
    75% {
        transform: scale3d(1.05, 0.95, 1);
    }
    to {
        transform: scale3d(1, 1, 1);
    }
}

/* 数字计数动画 */
@keyframes count-up {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* 粒子动画 */
@keyframes particle-float {
    0%, 100% {
        transform: translateY(0px) translateX(0px) rotate(0deg);
        opacity: 0.1;
    }
    33% {
        transform: translateY(-30px) translateX(20px) rotate(120deg);
        opacity: 0.3;
    }
    66% {
        transform: translateY(20px) translateX(-15px) rotate(240deg);
        opacity: 0.2;
    }
}

/* 类型写入效果 */
.typing-text {
    overflow: hidden;
    border-right: 2px solid var(--primary-light);
    white-space: nowrap;
    margin: 0 auto;
    letter-spacing: 0.1em;
    animation: typing 3.5s steps(40, end), blink 0.75s step-end infinite;
}

/* 悬停动画类 */
.hover-lift {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-lift:hover {
    transform: translateY(-8px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
}

.hover-grow {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-grow:hover {
    transform: scale(1.05);
}

.hover-glow {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-glow:hover {
    box-shadow: 0 0 30px rgba(99, 102, 241, 0.4);
}

.hover-rotate {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-rotate:hover {
    transform: rotate(5deg);
}

.hover-shake {
    animation-duration: 0.82s;
    animation-fill-mode: both;
    animation-name: shake;
}

@keyframes shake {
    10%, 90% {
        transform: translate3d(-1px, 0, 0);
    }
    20%, 80% {
        transform: translate3d(2px, 0, 0);
    }
    30%, 50%, 70% {
        transform: translate3d(-4px, 0, 0);
    }
    40%, 60% {
        transform: translate3d(4px, 0, 0);
    }
}

/* 渐变动画背景 */
.gradient-animated {
    background: linear-gradient(-45deg, #6366f1, #8b5cf6, #06b6d4, #10b981);
    background-size: 400% 400%;
    animation: gradient-shift 15s ease infinite;
}

/* 脉冲动画 */
.pulse-animation {
    animation: pulse 2s infinite;
}

/* 弹跳动画 */
.bounce-animation {
    animation: bounce 2s infinite;
}

/* 浮动动画 */
.float-animation {
    animation: float 6s ease-in-out infinite;
}

/* 旋转动画 */
.rotate-animation {
    animation: rotate 20s linear infinite;
}

/* 闪烁动画 */
.glow-animation {
    animation: glow 2s ease-in-out infinite alternate;
}

/* 形变动画 */
.morph-animation {
    animation: morphing 8s ease-in-out infinite;
}

/* 加载动画 */
.loading-dots {
    display: inline-flex;
    gap: 4px;
}

.loading-dots span {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: var(--primary-color);
    animation: loading-dot 1.4s ease-in-out infinite both;
}

.loading-dots span:nth-child(1) { animation-delay: -0.32s; }
.loading-dots span:nth-child(2) { animation-delay: -0.16s; }

@keyframes loading-dot {
    0%, 80%, 100% {
        transform: scale(0);
        opacity: 0.5;
    }
    40% {
        transform: scale(1);
        opacity: 1;
    }
}

/* 进度条动画 */
.progress-bar {
    position: relative;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    overflow: hidden;
}

.progress-fill {
    height: 100%;
    background: var(--gradient-primary);
    border-radius: 10px;
    transition: width 0.5s ease;
    position: relative;
    overflow: hidden;
}

.progress-fill::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.3),
        transparent
    );
    animation: shimmer 2s infinite;
}

/* 卡片翻转动画 */
.flip-card {
    perspective: 1000px;
}

.flip-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.8s;
    transform-style: preserve-3d;
}

.flip-card:hover .flip-card-inner {
    transform: rotateY(180deg);
}

.flip-card-front,
.flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    border-radius: var(--radius-lg);
}

.flip-card-back {
    transform: rotateY(180deg);
}

/* 波纹效果 */
.ripple-effect {
    position: relative;
    overflow: hidden;
}

.ripple-effect::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    transform: translate(-50%, -50%);
    transition: width 0.6s, height 0.6s;
}

.ripple-effect:active::before {
    width: 300px;
    height: 300px;
}

/* 文字显示动画 */
.reveal-text {
    position: relative;
    overflow: hidden;
}

.reveal-text span {
    display: inline-block;
    opacity: 0;
    animation: fadeInUp 0.8s ease forwards;
}

.reveal-text span:nth-child(1) { animation-delay: 0.1s; }
.reveal-text span:nth-child(2) { animation-delay: 0.2s; }
.reveal-text span:nth-child(3) { animation-delay: 0.3s; }
.reveal-text span:nth-child(4) { animation-delay: 0.4s; }
.reveal-text span:nth-child(5) { animation-delay: 0.5s; }

/* 滚动视差效果 */
.parallax-element {
    transform: translateZ(0);
    transition: transform 0.1s ease-out;
}

/* 3D倾斜效果 */
.tilt-effect {
    transition: transform 0.3s ease;
}

.tilt-effect:hover {
    transform: perspective(1000px) rotateX(10deg) rotateY(-10deg) scale(1.02);
}

/* 磁吸效果 */
.magnetic-effect {
    transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.magnetic-effect:hover {
    transform: translate(var(--x, 0), var(--y, 0));
}

/* 扫描线效果 */
.scan-line {
    position: relative;
    overflow: hidden;
}

.scan-line::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg,
        transparent,
        rgba(99, 102, 241, 0.3),
        transparent
    );
    animation: scan 3s infinite;
}

@keyframes scan {
    0% {
        left: -100%;
    }
    100% {
        left: 100%;
    }
}

/* 呼吸灯效果 */
.breathing-light {
    animation: breathing 3s ease-in-out infinite;
}

@keyframes breathing {
    0%, 100% {
        opacity: 0.3;
        transform: scale(1);
    }
    50% {
        opacity: 0.8;
        transform: scale(1.05);
    }
}

/* 数据流效果 */
.data-stream {
    position: relative;
    overflow: hidden;
}

.data-stream::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 2px;
    height: 100%;
    background: linear-gradient(
        to bottom,
        transparent,
        var(--primary-color),
        transparent
    );
    animation: data-flow 2s linear infinite;
}

@keyframes data-flow {
    0% {
        transform: translateY(-100%);
    }
    100% {
        transform: translateY(100%);
    }
}

/* 网格动画背景 */
.grid-animation {
    background-image: 
        linear-gradient(rgba(99, 102, 241, 0.1) 1px, transparent 1px),
        linear-gradient(90deg, rgba(99, 102, 241, 0.1) 1px, transparent 1px);
    background-size: 50px 50px;
    animation: grid-move 20s linear infinite;
}

@keyframes grid-move {
    0% {
        background-position: 0 0;
    }
    100% {
        background-position: 50px 50px;
    }
}

/* 故障效果 */
.glitch-effect {
    position: relative;
    color: var(--text-primary);
}

.glitch-effect::before,
.glitch-effect::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.glitch-effect::before {
    left: 2px;
    text-shadow: -2px 0 #ff0000;
    clip: rect(44px, 450px, 56px, 0);
    animation: glitch-anim 5s infinite linear alternate-reverse;
}

.glitch-effect::after {
    left: -2px;
    text-shadow: -2px 0 #00ff00, 2px 2px #ff0000;
    clip: rect(44px, 450px, 56px, 0);
    animation: glitch-anim2 1s infinite linear alternate-reverse;
}

@keyframes glitch-anim {
    0% {
        clip: rect(67px, 9999px, 98px, 0);
    }
    5% {
        clip: rect(30px, 9999px, 36px, 0);
    }
    10% {
        clip: rect(96px, 9999px, 89px, 0);
    }
    15% {
        clip: rect(68px, 9999px, 30px, 0);
    }
    20% {
        clip: rect(61px, 9999px, 98px, 0);
    }
    25% {
        clip: rect(27px, 9999px, 96px, 0);
    }
    30% {
        clip: rect(58px, 9999px, 68px, 0);
    }
    35% {
        clip: rect(17px, 9999px, 98px, 0);
    }
    40% {
        clip: rect(92px, 9999px, 61px, 0);
    }
    45% {
        clip: rect(98px, 9999px, 27px, 0);
    }
    50% {
        clip: rect(68px, 9999px, 58px, 0);
    }
    55% {
        clip: rect(17px, 9999px, 98px, 0);
    }
    60% {
        clip: rect(98px, 9999px, 61px, 0);
    }
    65% {
        clip: rect(27px, 9999px, 96px, 0);
    }
    70% {
        clip: rect(58px, 9999px, 68px, 0);
    }
    75% {
        clip: rect(98px, 9999px, 17px, 0);
    }
    80% {
        clip: rect(61px, 9999px, 98px, 0);
    }
    85% {
        clip: rect(96px, 9999px, 27px, 0);
    }
    90% {
        clip: rect(68px, 9999px, 58px, 0);
    }
    95% {
        clip: rect(17px, 9999px, 98px, 0);
    }
    100% {
        clip: rect(98px, 9999px, 61px, 0);
    }
}

@keyframes glitch-anim2 {
    0% {
        clip: rect(65px, 9999px, 93px, 0);
    }
    5% {
        clip: rect(25px, 9999px, 33px, 0);
    }
    10% {
        clip: rect(93px, 9999px, 86px, 0);
    }
    15% {
        clip: rect(65px, 9999px, 27px, 0);
    }
    20% {
        clip: rect(58px, 9999px, 95px, 0);
    }
    25% {
        clip: rect(24px, 9999px, 93px, 0);
    }
    30% {
        clip: rect(55px, 9999px, 65px, 0);
    }
    35% {
        clip: rect(14px, 9999px, 95px, 0);
    }
    40% {
        clip: rect(89px, 9999px, 58px, 0);
    }
    45% {
        clip: rect(95px, 9999px, 24px, 0);
    }
    50% {
        clip: rect(65px, 9999px, 55px, 0);
    }
    55% {
        clip: rect(14px, 9999px, 95px, 0);
    }
    60% {
        clip: rect(95px, 9999px, 58px, 0);
    }
    65% {
        clip: rect(24px, 9999px, 93px, 0);
    }
    70% {
        clip: rect(55px, 9999px, 65px, 0);
    }
    75% {
        clip: rect(95px, 9999px, 14px, 0);
    }
    80% {
        clip: rect(58px, 9999px, 95px, 0);
    }
    85% {
        clip: rect(93px, 9999px, 24px, 0);
    }
    90% {
        clip: rect(65px, 9999px, 55px, 0);
    }
    95% {
        clip: rect(14px, 9999px, 95px, 0);
    }
    100% {
        clip: rect(95px, 9999px, 58px, 0);
    }
}

/* AOS动画增强 */
[data-aos="fade-up"] {
    opacity: 0;
    transform: translateY(50px);
    transition: opacity 0.8s ease, transform 0.8s ease;
}

[data-aos="fade-up"].aos-animate {
    opacity: 1;
    transform: translateY(0);
}

[data-aos="fade-down"] {
    opacity: 0;
    transform: translateY(-50px);
    transition: opacity 0.8s ease, transform 0.8s ease;
}

[data-aos="fade-down"].aos-animate {
    opacity: 1;
    transform: translateY(0);
}

[data-aos="fade-left"] {
    opacity: 0;
    transform: translateX(-50px);
    transition: opacity 0.8s ease, transform 0.8s ease;
}

[data-aos="fade-left"].aos-animate {
    opacity: 1;
    transform: translateX(0);
}

[data-aos="fade-right"] {
    opacity: 0;
    transform: translateX(50px);
    transition: opacity 0.8s ease, transform 0.8s ease;
}

[data-aos="fade-right"].aos-animate {
    opacity: 1;
    transform: translateX(0);
}

[data-aos="zoom-in"] {
    opacity: 0;
    transform: scale(0.8);
    transition: opacity 0.8s ease, transform 0.8s ease;
}

[data-aos="zoom-in"].aos-animate {
    opacity: 1;
    transform: scale(1);
}

/* 响应式动画优化 */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

/* 高性能动画 */
.will-change-transform {
    will-change: transform;
}

.will-change-opacity {
    will-change: opacity;
}

.will-change-auto {
    will-change: auto;
}

/* GPU加速 */
.gpu-accelerated {
    transform: translateZ(0);
    backface-visibility: hidden;
    perspective: 1000;
}

/* 高级动画效果 */
@keyframes dataFlow {
    0% {
        transform: translateY(-100%);
        opacity: 0;
    }
    20% {
        opacity: 1;
    }
    80% {
        opacity: 1;
    }
    100% {
        transform: translateY(100%);
        opacity: 0;
    }
}

@keyframes neonGlow {
    0%, 100% {
        box-shadow: 
            0 0 5px var(--primary-color),
            0 0 10px var(--primary-color),
            0 0 15px var(--primary-color),
            0 0 20px var(--primary-color);
    }
    50% {
        box-shadow: 
            0 0 10px var(--primary-color),
            0 0 20px var(--primary-color),
            0 0 30px var(--primary-color),
            0 0 40px var(--primary-color);
    }
}

@keyframes holographicShift {
    0% {
        background-position: 0% 50%;
        filter: hue-rotate(0deg);
    }
    25% {
        background-position: 100% 50%;
        filter: hue-rotate(90deg);
    }
    50% {
        background-position: 100% 100%;
        filter: hue-rotate(180deg);
    }
    75% {
        background-position: 0% 100%;
        filter: hue-rotate(270deg);
    }
    100% {
        background-position: 0% 50%;
        filter: hue-rotate(360deg);
    }
}

@keyframes digitalRain {
    0% {
        transform: translateY(-100vh);
        opacity: 0;
    }
    10% {
        opacity: 1;
    }
    90% {
        opacity: 1;
    }
    100% {
        transform: translateY(100vh);
        opacity: 0;
    }
}

@keyframes cyberPulse {
    0%, 100% {
        box-shadow: 
            0 0 0 0 rgba(99, 102, 241, 0.7),
            inset 0 0 0 1px rgba(99, 102, 241, 0.3);
    }
    50% {
        box-shadow: 
            0 0 0 20px rgba(99, 102, 241, 0),
            inset 0 0 0 1px rgba(99, 102, 241, 0.6);
    }
}

@keyframes quantumGlitch {
    0%, 100% { 
        transform: translateX(0); 
        filter: hue-rotate(0deg);
    }
    10% { 
        transform: translateX(-2px) skewX(-2deg); 
        filter: hue-rotate(90deg);
    }
    20% { 
        transform: translateX(2px) skewX(2deg); 
        filter: hue-rotate(180deg);
    }
    30% { 
        transform: translateX(-1px) skewX(-1deg); 
        filter: hue-rotate(270deg);
    }
    40% { 
        transform: translateX(1px) skewX(1deg); 
        filter: hue-rotate(360deg);
    }
    50% { 
        transform: translateX(0); 
        filter: hue-rotate(0deg);
    }
}

@keyframes energyBurst {
    0% {
        transform: scale(1);
        opacity: 1;
        box-shadow: 0 0 0 0 rgba(99, 102, 241, 0.7);
    }
    70% {
        transform: scale(1.1);
        opacity: 0.8;
        box-shadow: 0 0 0 20px rgba(99, 102, 241, 0);
    }
    100% {
        transform: scale(1);
        opacity: 1;
        box-shadow: 0 0 0 0 rgba(99, 102, 241, 0);
    }
}

@keyframes neuroLink {
    0%, 100% {
        stroke-dashoffset: 100;
        opacity: 0.3;
    }
    50% {
        stroke-dashoffset: 0;
        opacity: 1;
    }
}

/* 高级动画类 */
.neon-glow {
    animation: neonGlow 3s ease-in-out infinite;
}

.holographic-shift {
    background: linear-gradient(45deg, #6366f1, #8b5cf6, #06b6d4, #10b981, #f59e0b, #ef4444);
    background-size: 400% 400%;
    animation: holographicShift 8s ease infinite;
}

.cyber-pulse {
    animation: cyberPulse 2s infinite;
}

.quantum-glitch {
    animation: quantumGlitch 4s infinite;
}

.energy-burst {
    animation: energyBurst 3s ease-in-out infinite;
}

.data-flow::before {
    content: '';
    position: absolute;
    top: 0;
    left: 50%;
    width: 2px;
    height: 100%;
    background: linear-gradient(
        to bottom,
        transparent,
        var(--primary-color),
        var(--secondary-color),
        transparent
    );
    animation: dataFlow 3s ease-in-out infinite;
    transform: translateX(-50%);
}

/* 3D卡片翻转效果 */
.card-3d {
    perspective: 1000px;
    transform-style: preserve-3d;
}

.card-3d:hover {
    animation: energyBurst 0.8s ease-out;
}

/* 渐变边框动画 */
.gradient-border {
    position: relative;
    background: var(--bg-glass);
    border-radius: var(--radius-xl);
}

.gradient-border::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    padding: 2px;
    background: linear-gradient(45deg, #6366f1, #8b5cf6, #06b6d4, #10b981);
    background-size: 400% 400%;
    border-radius: var(--radius-xl);
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: exclude;
    animation: holographicShift 6s ease infinite;
}

/* 脉冲光环 */
.pulse-ring {
    position: relative;
}

.pulse-ring::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    border: 2px solid var(--primary-color);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: cyberPulse 2s infinite;
}

/* 扫描线效果增强 */
.scan-line-enhanced {
    position: relative;
    overflow: hidden;
}

.scan-line-enhanced::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg,
        transparent,
        rgba(99, 102, 241, 0.1),
        rgba(99, 102, 241, 0.5),
        rgba(99, 102, 241, 0.1),
        transparent
    );
    animation: scan 4s infinite;
    z-index: 1;
}

.scan-line-enhanced::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: conic-gradient(from 0deg, transparent, var(--primary-color), transparent);
    opacity: 0.1;
    animation: rotate 8s linear infinite;
    z-index: 0;
}

/* 矩阵雨效果 */
.matrix-rain {
    position: relative;
    overflow: hidden;
}

.matrix-rain::before {
    content: '0101010101';
    position: absolute;
    top: -100%;
    left: 10%;
    font-family: var(--font-mono);
    font-size: 12px;
    color: var(--success-color);
    opacity: 0.3;
    animation: digitalRain 10s linear infinite;
    animation-delay: 0s;
}

.matrix-rain::after {
    content: '1010101010';
    position: absolute;
    top: -100%;
    right: 10%;
    font-family: var(--font-mono);
    font-size: 12px;
    color: var(--primary-color);
    opacity: 0.3;
    animation: digitalRain 12s linear infinite;
    animation-delay: 3s;
}

/* 悬浮动画 */
.levitate {
    animation: float 6s ease-in-out infinite;
}

.levitate:nth-child(2n) {
    animation-delay: 2s;
}

.levitate:nth-child(3n) {
    animation-delay: 4s;
}

/* 光束效果 */
.light-beam {
    position: relative;
}

.light-beam::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(90deg, transparent, var(--primary-color), transparent);
    animation: shimmer 3s infinite;
}

/* 连接线动画 */
.connection-line {
    position: relative;
}

.connection-line::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 100%;
    width: 50px;
    height: 1px;
    background: var(--primary-color);
    opacity: 0.5;
    animation: neuroLink 4s infinite;
    transform: translateY(-50%);
} 